#!/usr/bin/env bash
bin="$(cd -- "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd -P)"
certifaiger="$bin"/certifaiger
sat_solver="$bin"/@SAT@
aigtocnf="$bin"/aigtocnf
aigsplit="$bin"/aigsplit
for i in certifaiger sat_solver aigtocnf aigsplit; do
    [ ! -x "${!i}" ] && echo "$(basename "$0"): missing executable $i (${!i})" >&2 && exit 1
done
[ $# -lt 2 ] && echo "usage: $(basename "$0") <model> <witness>" && exit 0
mkdir -p ${TMPDIR:-/tmp}/froleyks-certifaiger
TMP=$(mktemp -d "${TMPDIR:-/tmp}"/froleyks-certifaiger/$(basename "$0")-XXXXXXXX)
trap 'rm -rf ${TMP}; exit' EXIT HUP INT QUIT TERM
SEQUENTIAL=0
if [[ $1 = "--seq" ]]; then
    SEQUENTIAL=1
    shift 1
fi
model="$1"
witness="$2"
check="${model##*/}"
check="${check%.*}"
check="${TMP}/check_${check}"
shift 2
echo $(basename "$0"): Checking witness circuit "$witness"
$certifaiger "$model" "$witness" "$check".aig "$@"
certifaiger_exit=$?
[ $certifaiger_exit -ne 0 ] && echo "$(basename "$0"): Error: certifaiger failed with exit code $certifaiger_exit)" >&2 && exit 1
echo

cd "$TMP" || exit 1
$aigsplit "$check".aig split_ || {
    echo "$(basename "$0"): Error: aigsplit failed" >&2
    exit 1
}

sat() {
    echo Checking $1
    $aigtocnf "${TMP}/$2" "${TMP}/$2.cnf"
    $sat_solver --unsat --quiet "${TMP}/$2.cnf"
    if [ $? -ne 20 ]; then
        echo "Error: $1 check failed"
        exit 1
    fi
}

CHECKS=(reset transition property base step)
PIDS=()
for i in {0..4}; do
    name="${CHECKS[i]}"
    aig="split_o$i.aig"
    if [ "$SEQUENTIAL" -eq 1 ]; then
        sat "$name" "$aig" || {
            echo $(basename "$0"): Certificate check failed.
            exit 1
        }
    else
        (sat "$name" "$aig") &
        PIDS+=($!)
    fi
done
for pid in "${PIDS[@]}"; do
    wait "$pid" || {
        echo $(basename "$0"): Certificate check failed.
        exit 1
    }
done

echo "$(basename "$0"): Certificate check passed."
