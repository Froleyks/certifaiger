#!/usr/bin/env bash
build=$(cd -- "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)
certifaiger="$build/certifaiger"
sat_solver="$build/kissat/kissat"
aigtocnf="$build/aiger/aigtocnf"
# non-stratified reset only
qaiger2qcir="$build/quabs/qaiger2qcir"
quabs="$build/quabs/quabs"
for i in certifaiger sat_solver aigtocnf; do
    [ ! -x "${!i}" ] && echo "$(basename "$0"): missing executable $i (${!i})" >&2 && exit 1
done
[ $# -lt 2 ] && echo "usage: $(basename "$0") <model> <witness>" && exit 0
mkdir -p ${TMPDIR:-/tmp}/froleyks-certifaiger
TMP=$(mktemp -d "${TMPDIR:-/tmp}"/froleyks-certifaiger/$(basename "$0")-XXXXXXXX)
trap 'rm -rf ${TMP}; exit' EXIT HUP INT QUIT TERM
CHECKS=(reset constraint transition property base step)
AIGS=()
for check in "${CHECKS[@]}"; do
    AIGS+=("${TMP}/$check.aig")
done
non_stratified=false
echo $(basename "$0"): Checking witness circuit "$2"
$certifaiger "$1" "$2" "${AIGS[@]}"
certifaiger_exit=$?
case $certifaiger_exit in
0) ;;
15)
    non_stratified=true
    CHECKS=(constraint transition property base step)
    ;;
*) echo "Error: certifaiger failed with exit code $certifaiger_exit" ;;
esac
echo

ALL_SUCCESS=true
if [ $non_stratified = true ]; then
    check="reset"
    echo Checking ${check} with quantification
    $qaiger2qcir "${TMP}/$check.aig" >"${TMP}/$check.qcir"
    $quabs "${TMP}/$check.qcir"
    if [ $? -ne 20 ]; then
        ALL_SUCCESS=false
        echo "Error: ${check} check failed"
    fi
    echo
fi
for check in "${CHECKS[@]}"; do
    echo Checking "$check"
    $aigtocnf "${TMP}/$check.aig" "${TMP}/$check.cnf"
    $sat_solver --quiet "${TMP}/$check.cnf"
    if [ $? -ne 20 ]; then
        ALL_SUCCESS=false
        echo "Error: ${check} check failed"
    fi
    echo
done
if $ALL_SUCCESS; then
    echo "Success: Certificate check passed."
    exit 0
else
    echo "Error: Certificate check failed."
    exit 1
fi
