#!/usr/bin/env bash
FAILURES=1 # number of failures before exit
bin="$(cd -- "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd -P)"
random="$bin"/random
for i in random; do
    [ ! -x "${!i}" ] && echo "$(basename "$0"): missing executable $i (${!i})" >&2 && exit 1
done
"$random" >/dev/null || exit 1
[ $# -lt 1 ] && echo "usage: $(basename "$0") <model checker>" && exit 0
MC="$1"
mkdir -p ${TMPDIR:-/tmp}/froleyks-certifaiger
TMP=$(mktemp -d "${TMPDIR:-/tmp}"/froleyks-certifaiger/$(basename "$0")-XXXXXXXX)
trap 'rm -rf ${TMP}; exit' EXIT HUP INT QUIT TERM

log="$TMP/log"
out="$TMP/out"
# echo $(basename "$0") logging to "$log"
i=0
safe=0
unsafe=0
tout=0
failed=0
while true; do
    "$random" "$MC" >"$out"
    res=$?
    if [ $res -eq 0 ]; then
        if grep -q 'check_unsat: Certificate check passed.' "$out"; then
            ((safe += 1))
        elif grep -q 'check_sat: Trace simulation passed' "$out"; then
            ((unsafe += 1))
        elif grep -q 'certified: model checker timeout' "$out"; then
            ((tout += 1))
        else
            echo "$(basename "$0"): ERROR in certified"
            exit 1
        fi
        (((i += 1) % 10)) || echo fuzzed: $i $safe $unsafe $tout $failed >>"$log"
        continue
    fi
    cat "$out"
    (((failed += 1) >= $FAILURES)) && exit 0
done
