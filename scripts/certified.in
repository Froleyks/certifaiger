#!/usr/bin/env bash
build=$(cd -- "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)
check="$build/check"
simulate="$build/simulate"
for i in check simulate; do
    [ ! -x "${!i}" ] && echo "$(basename "$0"): missing executable $i (${!i})" >&2 && exit 1
done
"$check" >/dev/null || exit 1
"$simulate" >/dev/null || exit 1
[ $# -lt 2 ] && echo "usage: $(basename "$0") <model checker> <model> [--mc_time=<limit>] [<model checker args>]" && exit 0
mkdir -p ${TMPDIR:-/tmp}/froleyks-certifaiger
TMP=$(mktemp -d "${TMPDIR:-/tmp}"/froleyks-certifaiger/$(basename "$0")-XXXXXXXX)
trap 'rm -rf "${TMP}"; exit' EXIT HUP INT QUIT TERM
if [[ $1 =~ --mc_time=([0-9]+) ]]; then
    limit="timeout ${BASH_REMATCH[1]} "
    shift 1
fi
MC="$1"
MODEL=$(realpath $2)
echo $(basename "$0"): running "$MC" on "$MODEL"
WIT=$TMP/wit_$(basename $MODEL)
if [[ $# -ge 3 && $3 != -* ]]; then
    WIT="$3"
    echo $(basename "$0"): writing "$WIT"
    shift
fi
shift 2
$limit $MC "$MODEL" "$WIT" "$@"
res=$?
echo $(basename "$0"): model checker exit code $res
case $res in
124)
    echo $(basename "$0"): model checker timeout
    exit 0
    ;;
0)
    echo $(basename "$0"): Error: model checker exit code needs to signal SAFE/UNSAFE
    exit 1
    ;;
10)
    "$simulate" "$MODEL" "$WIT"
    res=$?
    [ $res -eq 0 ] && echo $(basename "$0"): produced valid trace
    ;;
20)
    "$check" "$MODEL" "$WIT"
    res=$?
    [ $res -eq 0 ] && echo $(basename "$0"): produced valid witness circuit
    ;;
esac
exit $res
